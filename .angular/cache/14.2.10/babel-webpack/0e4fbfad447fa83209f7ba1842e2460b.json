{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor() {\n      this.key = 'cart';\n    }\n\n    getCart(userId) {\n      const allItems = JSON.parse(localStorage.getItem(this.key) || '[]');\n      return allItems.filter(item => item.userId === userId);\n    }\n\n    saveCart(userId, userCart) {\n      const allItems = JSON.parse(localStorage.getItem(this.key) || '[]'); // Remove old items for this user\n\n      const others = allItems.filter(item => item.userId !== userId); // Add updated cart items (make sure they have correct userId)\n\n      const updatedUserCart = userCart.map(item => ({ ...item,\n        userId\n      }));\n      localStorage.setItem(this.key, JSON.stringify([...others, ...updatedUserCart]));\n    }\n\n    addToCart(userId, item) {\n      const cart = this.getCart(userId);\n      const existing = cart.find(p => p.productId === item.productId);\n\n      if (existing) {\n        existing.quantity += item.quantity;\n      } else {\n        cart.push({ ...item,\n          userId\n        }); // ensure userId is added\n      }\n\n      this.saveCart(userId, cart);\n    }\n\n    removeFromCart(userId, productId) {\n      const cart = this.getCart(userId).filter(p => p.productId !== productId);\n      this.saveCart(userId, cart);\n    }\n\n    clearCart(userId) {\n      this.saveCart(userId, []);\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}