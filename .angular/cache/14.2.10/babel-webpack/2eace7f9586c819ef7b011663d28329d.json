{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor() {\n      this.key = 'orders';\n    }\n\n    getAll() {\n      const raw = localStorage.getItem(this.key);\n\n      try {\n        const orders = JSON.parse(raw || '[]');\n        return Array.isArray(orders) ? orders : [];\n      } catch (e) {\n        console.error('Error parsing orders from localStorage', e);\n        return [];\n      }\n    }\n\n    getByUser(userId) {\n      return this.getAll().filter(order => order.userId === userId);\n    }\n\n    placeOrder(order) {\n      const orders = this.getAll();\n      orders.push(order);\n      localStorage.setItem(this.key, JSON.stringify(orders));\n    }\n\n    deleteOrder(id) {\n      const orders = this.getAll().filter(order => order.id !== id);\n      localStorage.setItem(this.key, JSON.stringify(orders));\n    }\n\n    getById(id) {\n      return this.getAll().find(order => order.id === id);\n    }\n\n    updateStatus(id, status) {\n      const orders = this.getAll();\n      const index = orders.findIndex(order => order.id === id);\n\n      if (index !== -1) {\n        orders[index].status = status;\n        localStorage.setItem(this.key, JSON.stringify(orders));\n      }\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)();\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}